[{"name":"app.R","content":"# ETH 2025 Survival Survey Dashboard\n# Revision Date: 2025-01-16\n# Description: A Shinylive-optimized dashboard for analyzing survey data.\n# This version minimizes dependencies and uses only packages that are\n# fully compatible with WebAssembly R (webR) for seamless deployment.\n\n# --- Core Libraries (Shinylive Compatible) ---\nlibrary(shiny)\nlibrary(bslib)\nlibrary(reactable)\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(stringr)\n\n# --- Custom Color Palette for Enhanced Visuals ---\ncustom_colors <- list(\n  primary = \"#2E8B57\",      # Sea Green\n  secondary = \"#20B2AA\",    # Light Sea Green\n  success = \"#28a745\",      # Bootstrap Success\n  warning = \"#ffc107\",      # Bootstrap Warning\n  danger = \"#dc3545\",       # Bootstrap Danger\n  info = \"#17a2b8\",         # Bootstrap Info\n  light = \"#f8f9fa\",        # Light Gray\n  dark = \"#343a40\",         # Dark Gray\n  gradient = c(\"#2E8B57\", \"#20B2AA\", \"#66CDAA\", \"#98FB98\", \"#90EE90\")\n)\n\n# --- Helper Functions ---\n# Custom formatting functions to replace scales dependency\nformat_percent <- function(x, digits = 1) {\n  paste0(round(x * 100, digits), \"%\")\n}\n\nformat_number <- function(x, digits = 0) {\n  format(round(x, digits), big.mark = \",\", scientific = FALSE)\n}\n\n# --- Data Loading and Preprocessing ---\n# Load the raw dataset from the RDS file\ndf_raw <- readRDS(\"df.rds\")\n\n# Clean and preprocess the data\ndf_processed <- df_raw %>%\n  mutate(across(everything(), ~ na_if(., \"---\"))) %>%\n  mutate(across(where(is.list), ~ sapply(., function(x) if(length(x) > 0) x[1] else NA))) %>%\n  mutate(\n    # Ensure time columns are in POSIXct format for calculations\n    completed_time = ymd_hms(completed_time),\n    started_time = ymd_hms(started_time)\n  ) %>%\n  mutate(\n    date = as.Date(completed_time),\n    week = floor_date(date, \"week\"),\n    month = floor_date(date, \"month\"),\n    hour_started = hour(started_time),\n    day_of_week = wday(date, label = TRUE, week_start = 1),\n    is_weekend = day_of_week %in% c(\"Sat\", \"Sun\"),\n    duration_minutes = as.numeric(difftime(completed_time, started_time, units = \"mins\")),\n    is_night_survey = hour_started >= 19 | hour_started < 6,\n    is_short_survey = duration_minutes <= 5,\n    is_long_survey = duration_minutes >= 60\n  ) %>%\n  # Ensure numeric columns are correctly typed for calculations\n  mutate(across(c(starts_with(\"ps_num_planted_\"), starts_with(\"num_surv_\")), as.numeric))\n\n# --- UI Definition ---\nui <- page_navbar(\n  title = div(\n    icon(\"seedling\", style = \"color: #2E8B57; margin-right: 10px;\"),\n    \"Survival Survey Dashboard\",\n    style = \"font-weight: bold; font-size: 1.2em;\"\n  ),\n  theme = bs_theme(\n    version = 5, \n    bootswatch = \"flatly\",\n    primary = \"#2E8B57\", \n    secondary = \"#20B2AA\",\n    success = \"#28a745\",\n    warning = \"#ffc107\",\n    danger = \"#dc3545\",\n    info = \"#17a2b8\"\n  ),\n  \n  # Global Filters Sidebar\n  sidebar = sidebar(\n    title = div(icon(\"filter\"), \"Global Filters\"),\n    width = 280,\n    \n    # Date Range Filter\n    dateRangeInput(\n      \"global_date_range\", \n      \"📅 Date Range:\",\n      start = Sys.Date() - 30, \n      end = Sys.Date(),\n      format = \"yyyy-mm-dd\",\n      separator = \" to \"\n    ),\n    \n    # Site Filter\n    selectInput(\n      \"global_site_filter\", \n      \"🏢 Site:\",\n      choices = NULL, \n      multiple = TRUE,\n      selectize = TRUE\n    ),\n    \n    # Woreda Filter\n    selectInput(\n      \"global_woreda_filter\", \n      \"🗺️ Woreda:\",\n      choices = NULL, \n      multiple = TRUE,\n      selectize = TRUE\n    ),\n    \n    # Enumerator Filter\n    selectInput(\n      \"global_enum_filter\", \n      \"👤 Enumerator:\",\n      choices = NULL, \n      multiple = TRUE,\n      selectize = TRUE\n    ),\n    \n    hr(),\n    \n    # Quick Stats\n    div(\n      style = \"background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); padding: 15px; border-radius: 8px; margin-top: 10px;\",\n      h6(\"📊 Quick Stats\", style = \"margin-bottom: 10px; color: #2E8B57; font-weight: bold;\"),\n      div(\n        style = \"display: flex; justify-content: space-between; margin-bottom: 5px;\",\n        span(\"Filtered Records:\", style = \"font-size: 0.9em;\"),\n        textOutput(\"filtered_count\", inline = TRUE)\n      ),\n      div(\n        style = \"display: flex; justify-content: space-between;\",\n        span(\"Completion Rate:\", style = \"font-size: 0.9em;\"),\n        textOutput(\"filtered_completion_rate\", inline = TRUE)\n      )\n    ),\n    \n    # Reset Filters Button\n    div(\n      style = \"margin-top: 15px;\",\n      actionButton(\n        \"reset_filters\", \n        \"🔄 Reset Filters\",\n        class = \"btn-outline-secondary btn-sm\",\n        style = \"width: 100%;\"\n      )\n    )\n  ),\n  \n  # -- Main Content Panels --\n  nav_panel(\n    title = \"Executive Summary\",\n    layout_column_wrap(\n      width = 1/5,\n      value_box(\"Total Surveys\", value = textOutput(\"total_surveys\"), showcase = icon(\"clipboard-list\"), theme = \"primary\"),\n      value_box(\"Completed\", value = textOutput(\"completed_surveys\"), showcase = icon(\"check-circle\"), theme = \"bg-success\"),\n      value_box(\"Refusal Rate\", value = textOutput(\"refusal_rate\"), showcase = icon(\"times-circle\"), theme = \"bg-danger\"),\n      value_box(\"Avg. Duration\", value = textOutput(\"avg_duration\"), showcase = icon(\"clock\"), theme = \"bg-warning\"),\n      value_box(\"Enumerators\", value = textOutput(\"unique_enumerators\"), showcase = icon(\"users\"), theme = \"secondary\")\n    ),\n    layout_columns(\n      col_widths = c(8, 4),\n      card(\n        full_screen = TRUE,\n        card_header(\"📈 Daily Survey Progress\"),\n        plotlyOutput(\"daily_progress_plot\", height = \"400px\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"🎯 Target Achievement\"),\n        plotlyOutput(\"gauge_plot\", height = \"400px\")\n      )\n    )\n  ),\n  \n  nav_panel(\n    title = \"Enumerator Performance\",\n    layout_columns(\n      col_widths = c(7, 5),\n      card(\n        full_screen = TRUE,\n        card_header(\"📊 Individual Performance\"),\n        reactable::reactableOutput(\"enumerator_table\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"🎯 Target vs Actual Performance\"),\n        plotlyOutput(\"target_comparison_plot\")\n      )\n    ),\n    layout_columns(\n      col_widths = c(8, 4),\n      card(\n        full_screen = TRUE,\n        card_header(\"📅 Daily Productivity Heatmap\"),\n        plotlyOutput(\"productivity_heatmap\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"⚠️ Quality Alerts\"),\n        reactable::reactableOutput(\"quality_alerts_table\")\n      )\n    )\n  ),\n  \n  nav_panel(\n    title = \"Agricultural Analysis\",\n    layout_columns(\n      col_widths = c(7, 5),\n      card(\n        full_screen = TRUE,\n        card_header(\"🌱 Tree Survival Rates by Species\"),\n        plotlyOutput(\"survival_rates_plot\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"🌱 Detailed Species Performance\"),\n        reactable::reactableOutput(\"species_table\")\n      )\n    ),\n    card(\n      full_screen = TRUE,\n      card_header(\"🗺️ Geographic Performance (Surveys per Woreda)\"),\n      plotlyOutput(\"geographic_plot\")\n    )\n  ),\n  \n  nav_panel(\n    title = \"Site Analysis\",\n    layout_columns(\n      col_widths = c(6, 6),\n      card(\n        full_screen = TRUE,\n        card_header(\"🏢 Site Performance Overview\"),\n        plotlyOutput(\"site_performance_plot\", height = \"400px\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"📊 Site Comparison Table\"),\n        reactable::reactableOutput(\"site_comparison_table\")\n      )\n    ),\n    layout_columns(\n      col_widths = c(8, 4),\n      card(\n        full_screen = TRUE,\n        card_header(\"🌱 Survival Rates by Site\"),\n        plotlyOutput(\"site_survival_plot\", height = \"400px\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"⏱️ Average Duration by Site\"),\n        plotlyOutput(\"site_duration_plot\", height = \"400px\")\n      )\n    )\n  ),\n  \n  nav_panel(\n    title = \"Data Explorer\",\n    card(\n      card_header(\"🔍 Interactive Data Explorer\"),\n      layout_columns(\n        col_widths = c(4, 4, 4),\n        dateRangeInput(\"date_range\", \"Date Range:\", start = Sys.Date() - 30, end = Sys.Date()),\n        selectInput(\"site_filter\", \"Site:\", choices = NULL, multiple = TRUE),\n        selectInput(\"enum_filter\", \"Enumerator:\", choices = NULL, multiple = TRUE)\n      ),\n      reactable::reactableOutput(\"explorer_table\")\n    )\n  ),\n  \n  nav_panel(\n    title = \"Advanced Analytics\",\n    layout_columns(\n      col_widths = c(6, 6),\n      card(\n        full_screen = TRUE,\n        card_header(\"🔄 Survey Completion Funnel\"),\n        plotlyOutput(\"funnel_plot\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"📊 Survey Duration Distribution\"),\n        plotlyOutput(\"duration_plot\")\n      )\n    ),\n    card(\n      full_screen = TRUE,\n      card_header(\"📅 Weekly Performance Trends\"),\n      plotlyOutput(\"weekly_trends_plot\")\n    )\n  )\n)\n\n# --- Server Logic ---\nserver <- function(input, output, session) {\n  \n  # --- Reactive Data ---\n  raw_data <- reactiveVal(df_processed)\n  \n  # Base completed data (before global filters)\n  df_completed_base <- reactive({\n    raw_data() %>% filter(consent == 1)\n  })\n  \n  # Global filtered data\n  df_filtered <- reactive({\n    data <- df_completed_base()\n    \n    # Apply global date filter\n    if (!is.null(input$global_date_range)) {\n      data <- data %>% \n        filter(date >= input$global_date_range[1] & date <= input$global_date_range[2])\n    }\n    \n    # Apply global site filter\n    if (length(input$global_site_filter) > 0) {\n      data <- data %>% filter(site %in% input$global_site_filter)\n    }\n    \n    # Apply global woreda filter\n    if (length(input$global_woreda_filter) > 0) {\n      data <- data %>% filter(woreda %in% input$global_woreda_filter)\n    }\n    \n    # Apply global enumerator filter\n    if (length(input$global_enum_filter) > 0) {\n      data <- data %>% filter(username %in% input$global_enum_filter)\n    }\n    \n    data\n  })\n  \n  # For backward compatibility, use filtered data as default\n  df_completed <- reactive({\n    df_filtered()\n  })\n  \n  # --- Initialize and Update Global Filters ---\n  observe({\n    data <- df_completed_base()\n    req(nrow(data) > 0)\n\n    min_date <- min(data$date, na.rm = TRUE)\n    max_date <- max(data$date, na.rm = TRUE)\n\n    # Update global filter choices\n    if (is.finite(min_date) && is.finite(max_date)) {\n      updateSelectInput(session, \"global_site_filter\", \n                       choices = sort(unique(data$site)), selected = NULL)\n      updateSelectInput(session, \"global_woreda_filter\", \n                       choices = sort(unique(data$woreda)), selected = NULL)\n      updateSelectInput(session, \"global_enum_filter\", \n                       choices = sort(unique(data$username)), selected = NULL)\n      updateDateRangeInput(session, \"global_date_range\", \n                          start = min_date, end = max_date)\n    }\n    \n    # Also update local filters for Data Explorer\n    updateSelectInput(session, \"site_filter\", \n                     choices = sort(unique(data$site)), selected = NULL)\n    updateSelectInput(session, \"enum_filter\", \n                     choices = sort(unique(data$username)), selected = NULL)\n    updateDateRangeInput(session, \"date_range\", \n                        start = min_date, end = max_date)\n  })\n  \n  # --- Reset Filters ---\n  observeEvent(input$reset_filters, {\n    data <- df_completed_base()\n    min_date <- min(data$date, na.rm = TRUE)\n    max_date <- max(data$date, na.rm = TRUE)\n    \n    updateSelectInput(session, \"global_site_filter\", selected = character(0))\n    updateSelectInput(session, \"global_woreda_filter\", selected = character(0))\n    updateSelectInput(session, \"global_enum_filter\", selected = character(0))\n    updateDateRangeInput(session, \"global_date_range\", start = min_date, end = max_date)\n  })\n  \n  # --- Quick Stats in Sidebar ---\n  output$filtered_count <- renderText({\n    format_number(nrow(df_filtered()))\n  })\n  \n  output$filtered_completion_rate <- renderText({\n    total_filtered <- nrow(raw_data())\n    if (total_filtered > 0) {\n      # Apply same filters to raw data for completion rate calculation\n      raw_filtered <- raw_data()\n      \n      if (!is.null(input$global_date_range)) {\n        raw_filtered <- raw_filtered %>% \n          filter(date >= input$global_date_range[1] & date <= input$global_date_range[2])\n      }\n      \n      if (length(input$global_site_filter) > 0) {\n        raw_filtered <- raw_filtered %>% filter(site %in% input$global_site_filter)\n      }\n      \n      if (length(input$global_woreda_filter) > 0) {\n        raw_filtered <- raw_filtered %>% filter(woreda %in% input$global_woreda_filter)\n      }\n      \n      if (length(input$global_enum_filter) > 0) {\n        raw_filtered <- raw_filtered %>% filter(username %in% input$global_enum_filter)\n      }\n      \n      completed_count <- sum(raw_filtered$consent == 1, na.rm = TRUE)\n      total_count <- nrow(raw_filtered)\n      \n      if (total_count > 0) {\n        rate <- (completed_count / total_count)\n        format_percent(rate)\n      } else {\n        \"0%\"\n      }\n    } else {\n      \"0%\"\n    }\n  })\n  \n  # --- Executive Summary ---\n  output$total_surveys <- renderText({ format_number(nrow(raw_data())) })\n  output$completed_surveys <- renderText({ format_number(nrow(df_completed())) })\n  output$refusal_rate <- renderText({\n    rate <- sum(raw_data()$consent == 0, na.rm = TRUE) / nrow(raw_data())\n    format_percent(rate)\n  })\n  output$avg_duration <- renderText({\n    paste(round(mean(df_completed()$duration_minutes, na.rm = TRUE), 1), \"min\")\n  })\n  output$unique_enumerators <- renderText({ format_number(n_distinct(df_completed()$username)) })\n  \n  output$daily_progress_plot <- renderPlotly({\n    daily_data <- df_completed() %>%\n      group_by(date) %>%\n      summarise(surveys = n(), .groups = \"drop\")\n    \n    plot_ly(daily_data, x = ~date, y = ~surveys, type = 'bar',\n            marker = list(color = custom_colors$primary),\n            hovertemplate = \"Date: %{x}<br>Surveys: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Date\"),\n        yaxis = list(title = \"Number of Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE\n      )\n  })\n  \n  output$gauge_plot <- renderPlotly({\n    target <- 3600\n    current <- nrow(df_completed())\n    percentage <- min(current / target, 1) * 100\n    \n    plot_ly(\n      type = \"indicator\",\n      mode = \"gauge+number+delta\",\n      value = current,\n      delta = list(reference = target),\n      gauge = list(\n        axis = list(range = list(NULL, target)),\n        bar = list(color = custom_colors$primary),\n        steps = list(\n          list(range = c(0, target*0.5), color = \"lightgray\"),\n          list(range = c(target*0.5, target*0.8), color = \"gray\")\n        ),\n        threshold = list(\n          line = list(color = \"red\", width = 4),\n          thickness = 0.75,\n          value = target\n        )\n      )\n    ) %>% \n    layout(\n      title = FALSE, \n      paper_bgcolor = \"transparent\",\n      font = list(color = custom_colors$dark)\n    )\n  })\n  \n  # --- Enumerator Performance ---\n  enumerator_stats <- reactive({\n    df_completed() %>%\n      group_by(username) %>%\n      summarise(\n        total_surveys = n(),\n        avg_duration = round(mean(duration_minutes, na.rm = TRUE), 1),\n        short_surveys = sum(is_short_survey, na.rm = TRUE),\n        night_surveys = sum(is_night_survey, na.rm = TRUE),\n        .groups = \"drop\"\n      ) %>%\n      arrange(desc(total_surveys))\n  })\n  \n  output$enumerator_table <- reactable::renderReactable({\n    reactable(\n      enumerator_stats(),\n      columns = list(\n        username = colDef(name = \"Enumerator\", minWidth = 120),\n        total_surveys = colDef(name = \"Total Surveys\", align = \"center\"),\n        avg_duration = colDef(name = \"Avg Duration (min)\", align = \"center\"),\n        short_surveys = colDef(name = \"Short Surveys (<5min)\", align = \"center\"),\n        night_surveys = colDef(name = \"Night Surveys\", align = \"center\")\n      ),\n      defaultPageSize = 8, \n      searchable = TRUE, \n      highlight = TRUE, \n      bordered = TRUE, \n      striped = TRUE,\n      theme = reactableTheme(\n        headerStyle = list(backgroundColor = \"#f8f9fa\", fontWeight = \"bold\"),\n        cellStyle = list(fontSize = \"0.9em\")\n      )\n    )\n  })\n  \n  output$target_comparison_plot <- renderPlotly({\n    target_per_enum <- 50\n    p_data <- enumerator_stats()\n    \n    plot_ly(p_data, x = ~reorder(username, -total_surveys), y = ~total_surveys, \n            type = 'bar', name = \"Actual\",\n            marker = list(color = custom_colors$primary),\n            hovertemplate = \"Enumerator: %{x}<br>Surveys: %{y}<extra><\/extra>\") %>%\n      add_trace(x = ~reorder(username, -total_surveys), y = target_per_enum, \n                type = 'scatter', mode = 'lines', name = \"Target\",\n                line = list(color = custom_colors$danger, dash = 'dash', width = 3),\n                hovertemplate = \"Target: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Enumerator\", tickangle = -45),\n        yaxis = list(title = \"Total Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        legend = list(orientation = 'h', y = 1.1, x = 0.5, xanchor = 'center'),\n        margin = list(b = 100)\n      )\n  })\n  \n  output$productivity_heatmap <- renderPlotly({\n    heatmap_data <- df_completed() %>%\n      group_by(day_of_week, hour_started) %>%\n      summarise(count = n(), .groups = \"drop\")\n      \n    plot_ly(\n      data = heatmap_data,\n      x = ~hour_started, y = ~day_of_week, z = ~count,\n      type = \"heatmap\", \n      colorscale = list(c(0, \"#f8f9fa\"), c(1, custom_colors$primary)),\n      hovertemplate = \"Day: %{y}<br>Hour: %{x}<br>Surveys: %{z}<extra><\/extra>\"\n    ) %>% \n    layout(\n      title = FALSE,\n      xaxis = list(title = \"Hour of Day\"),\n      yaxis = list(title = \"Day of Week\", categoryorder = \"array\", \n                   categoryarray = c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\")),\n      paper_bgcolor = \"transparent\"\n    )\n  })\n  \n  output$quality_alerts_table <- reactable::renderReactable({\n    quality_data <- enumerator_stats() %>%\n      filter(short_surveys > 0 | night_surveys > 0) %>%\n      select(Enumerator = username, `Short Surveys` = short_surveys, `Night Surveys` = night_surveys)\n      \n    reactable(\n      quality_data,\n      columns = list(\n        `Short Surveys` = colDef(style = function(value) {\n          if (value > 0) list(color = custom_colors$danger, fontWeight = \"bold\") else NULL\n        }),\n        `Night Surveys` = colDef(style = function(value) {\n          if (value > 0) list(color = custom_colors$danger, fontWeight = \"bold\") else NULL\n        })\n      ),\n      defaultPageSize = 5, \n      highlight = TRUE, \n      bordered = TRUE, \n      striped = TRUE,\n      theme = reactableTheme(\n        headerStyle = list(backgroundColor = \"#f8f9fa\", fontWeight = \"bold\")\n      )\n    )\n  })\n  \n  # --- Agricultural Analysis ---\n  species_data <- reactive({\n    df_completed() %>%\n      select(starts_with(\"ps_num_planted_\"), starts_with(\"num_surv_\")) %>%\n      pivot_longer(everything(), names_to = \"key\", values_to = \"value\") %>%\n      mutate(\n        type = ifelse(str_detect(key, \"ps_num_planted\"), \"planted\", \"survived\"),\n        species = str_remove_all(key, \"ps_num_planted_|num_surv_\")\n      ) %>%\n      group_by(species, type) %>%\n      summarise(total = sum(value, na.rm = TRUE), .groups = \"drop\") %>%\n      pivot_wider(names_from = type, values_from = total) %>%\n      mutate(\n        survival_rate = ifelse(planted > 0, (survived / planted) * 100, 0)\n      )\n  })\n  \n  output$survival_rates_plot <- renderPlotly({\n    p_data <- species_data() %>% arrange(desc(survival_rate))\n    \n    plot_ly(p_data, x = ~reorder(species, survival_rate), y = ~survival_rate, \n            type = 'bar', marker = list(color = ~survival_rate, \n            colorscale = list(c(0, \"#ffcdd2\"), c(1, custom_colors$success))),\n            hovertemplate = \"Species: %{x}<br>Survival Rate: %{y:.1f}%<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Species\", tickangle = -45),\n        yaxis = list(title = \"Survival Rate (%)\", range = c(0, 100)),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE,\n        margin = list(b = 100)\n      )\n  })\n  \n  output$species_table <- reactable::renderReactable({\n    display_data <- species_data() %>%\n      select(Species = species, Planted = planted, Survived = survived, `Survival Rate (%)` = survival_rate) %>%\n      arrange(desc(`Survival Rate (%)`))\n      \n    reactable(\n      display_data,\n      columns = list(\n        `Survival Rate (%)` = colDef(\n          name = \"Survival Rate (%)\",\n          style = function(value) {\n            if (is.na(value)) return(NULL)\n            color <- if (value >= 80) {\n              \"#A5D6A7\"\n            } else if (value >= 60) {\n              \"#FFF9C4\"\n            } else {\n              \"#FFCDD2\"\n            }\n            list(background = color)\n          },\n          format = list(digits = 1)\n        )\n      ),\n      defaultPageSize = 7, \n      highlight = TRUE, \n      bordered = TRUE, \n      striped = TRUE,\n      theme = reactableTheme(\n        headerStyle = list(backgroundColor = \"#f8f9fa\", fontWeight = \"bold\")\n      )\n    )\n  })\n  \n  output$geographic_plot <- renderPlotly({\n    geo_data <- df_completed() %>%\n      group_by(woreda) %>%\n      summarise(count = n(), .groups = \"drop\")\n      \n    plot_ly(geo_data, x = ~reorder(woreda, -count), y = ~count, \n            type = 'bar', marker = list(color = custom_colors$secondary),\n            hovertemplate = \"Woreda: %{x}<br>Surveys: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Woreda\", tickangle = -45),\n        yaxis = list(title = \"Number of Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE,\n        margin = list(b = 100)\n      )\n  })\n  \n  # --- Site Analysis ---\n  site_stats <- reactive({\n    df_completed() %>%\n      group_by(site) %>%\n      summarise(\n        total_surveys = n(),\n        avg_duration = round(mean(duration_minutes, na.rm = TRUE), 1),\n        completion_rate = round((n() / nrow(df_completed())) * 100, 1),\n        unique_enumerators = n_distinct(username),\n        avg_hh_size = round(mean(hh_size, na.rm = TRUE), 1),\n        .groups = \"drop\"\n      ) %>%\n      arrange(desc(total_surveys))\n  })\n  \n  output$site_performance_plot <- renderPlotly({\n    p_data <- site_stats()\n    \n    plot_ly(p_data, x = ~reorder(site, -total_surveys), y = ~total_surveys, \n            type = 'bar', marker = list(color = custom_colors$gradient[1]),\n            hovertemplate = \"Site: %{x}<br>Surveys: %{y}<br>Avg Duration: %{customdata} min<extra><\/extra>\",\n            customdata = ~avg_duration) %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Site\", tickangle = -45),\n        yaxis = list(title = \"Number of Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE,\n        margin = list(b = 100)\n      )\n  })\n  \n  output$site_comparison_table <- reactable::renderReactable({\n    reactable(\n      site_stats(),\n      columns = list(\n        site = colDef(name = \"Site\", minWidth = 120),\n        total_surveys = colDef(name = \"Total Surveys\", align = \"center\", minWidth = 100),\n        avg_duration = colDef(name = \"Avg Duration (min)\", align = \"center\"),\n        completion_rate = colDef(name = \"Completion Rate (%)\", align = \"center\"),\n        unique_enumerators = colDef(name = \"Enumerators\", align = \"center\"),\n        avg_hh_size = colDef(name = \"Avg HH Size\", align = \"center\")\n      ),\n      defaultPageSize = 8, \n      searchable = TRUE, \n      highlight = TRUE, \n      bordered = TRUE, \n      striped = TRUE,\n      theme = reactableTheme(\n        headerStyle = list(backgroundColor = \"#f8f9fa\", fontWeight = \"bold\"),\n        cellStyle = list(fontSize = \"0.9em\")\n      )\n    )\n  })\n  \n  output$site_survival_plot <- renderPlotly({\n    # Calculate survival rates by site\n    site_survival <- df_completed() %>%\n      select(site, starts_with(\"ps_num_planted_\"), starts_with(\"num_surv_\")) %>%\n      group_by(site) %>%\n      summarise(\n        total_planted = sum(across(starts_with(\"ps_num_planted_\")), na.rm = TRUE),\n        total_survived = sum(across(starts_with(\"num_surv_\")), na.rm = TRUE),\n        .groups = \"drop\"\n      ) %>%\n      mutate(\n        survival_rate = ifelse(total_planted > 0, (total_survived / total_planted) * 100, 0)\n      ) %>%\n      arrange(desc(survival_rate))\n    \n    plot_ly(site_survival, x = ~reorder(site, survival_rate), y = ~survival_rate, \n            type = 'bar', marker = list(color = ~survival_rate, \n            colorscale = list(c(0, \"#ffcdd2\"), c(1, custom_colors$success))),\n            hovertemplate = \"Site: %{x}<br>Planted: %{customdata[0]}<br>Survived: %{customdata[1]}<br>Rate: %{y:.1f}%<extra><\/extra>\",\n            customdata = ~cbind(total_planted, total_survived)) %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Site\", tickangle = -45),\n        yaxis = list(title = \"Survival Rate (%)\", range = c(0, 100)),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE,\n        margin = list(b = 100)\n      )\n  })\n  \n  output$site_duration_plot <- renderPlotly({\n    duration_data <- site_stats() %>%\n      arrange(desc(avg_duration))\n    \n    plot_ly(duration_data, x = ~reorder(site, avg_duration), y = ~avg_duration, \n            type = 'bar', marker = list(color = custom_colors$warning),\n            hovertemplate = \"Site: %{x}<br>Avg Duration: %{y} min<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Site\", tickangle = -45),\n        yaxis = list(title = \"Average Duration (minutes)\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE,\n        margin = list(b = 100)\n      )\n  })\n  \n  # --- Data Explorer ---\n  filtered_data <- reactive({\n    # Add guards to ensure inputs are ready before filtering\n    req(input$date_range, cancelOutput = TRUE)\n    req(is.Date(input$date_range[1]), is.Date(input$date_range[2]), cancelOutput = TRUE)\n\n    df <- df_completed() %>%\n      select(\n        Date = date, Enumerator = username, \n        Site = site, Woreda = woreda, `Duration (min)` = duration_minutes,\n        `HH Size` = hh_size, `Education` = education_level, Age = age, Sex = sex\n      )\n      \n    # Apply filters\n    df <- df %>% \n      filter(Date >= input$date_range[1] & Date <= input$date_range[2])\n    \n    if (length(input$site_filter) > 0) {\n      df <- df %>% filter(Site %in% input$site_filter)\n    }\n    \n    if (length(input$enum_filter) > 0) {\n      df <- df %>% filter(Enumerator %in% input$enum_filter)\n    }\n    \n    df\n  })\n  \n  output$explorer_table <- reactable::renderReactable({\n    reactable(\n      filtered_data(),\n      searchable = TRUE,\n      striped = TRUE,\n      highlight = TRUE,\n      bordered = TRUE,\n      defaultPageSize = 10,\n      showPageSizeOptions = TRUE,\n      pageSizeOptions = c(10, 25, 50),\n      theme = reactableTheme(\n        headerStyle = list(backgroundColor = \"#f8f9fa\", fontWeight = \"bold\"),\n        cellStyle = list(fontSize = \"0.9em\")\n      )\n    )\n  })\n  \n  # --- Advanced Analytics ---\n  output$funnel_plot <- renderPlotly({\n    funnel_data <- data.frame(\n      stage = c(\"Total Attempts\", \"Completed\", \"Refused\"),\n      value = c(nrow(raw_data()), sum(raw_data()$consent == 1, na.rm = TRUE), sum(raw_data()$consent == 0, na.rm = TRUE))\n    )\n    \n    plot_ly(funnel_data, type = 'funnel',\n            y = ~stage, x = ~value,\n            textposition = \"inside\", textinfo = \"value+percent initial\",\n            marker = list(color = c(custom_colors$primary, custom_colors$success, custom_colors$danger))) %>%\n      layout(\n        title = FALSE, \n        paper_bgcolor = \"transparent\",\n        font = list(color = custom_colors$dark)\n      )\n  })\n  \n  output$duration_plot <- renderPlotly({\n    plot_ly(df_completed(), x = ~duration_minutes, type = 'histogram',\n            marker = list(color = custom_colors$secondary),\n            hovertemplate = \"Duration: %{x} min<br>Count: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Duration (minutes)\"),\n        yaxis = list(title = \"Frequency\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE\n      )\n  })\n  \n  output$weekly_trends_plot <- renderPlotly({\n    weekly_data <- df_completed() %>%\n      group_by(week) %>%\n      summarise(surveys = n(), .groups = \"drop\")\n      \n    plot_ly(weekly_data, x = ~week, y = ~surveys, type = 'scatter', mode = 'lines+markers',\n            line = list(color = custom_colors$primary, width = 3), \n            marker = list(color = custom_colors$primary, size = 8),\n            hovertemplate = \"Week: %{x}<br>Surveys: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Week\"),\n        yaxis = list(title = \"Number of Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE\n      )\n  })\n}\n\n# --- Run Application ---\nshinyApp(ui, server)","type":"text"},{"name":"df.rds","content":"H4sIAAAAAAAABuz9aZckyXUeDDYa6G6AWAguokgQpJJAU69IMEDblxY1c8BVI4qa9wz4jkb6\nUsfczLwq1VWZzcwstoDv831+8jw3stI9Itzcwz3CY8mqOAS7LMPNbbnLc597zSLz//MbH330\n0Tc/+tYn+C/+/6OPPvm//vnvFw4//Q5++P/h/3/40Uff+OuPvvXRd9D+FnfSvD9tzcrtQ/ef\nOs4++zq0rA4x16n0PnUvz10O59ae6i9ztc9hDYfYy1z7Ogf5jMG3524Ph5730LI6ptwOgfPn\nIM9jrmFqLDsHHJvKec5hL+fQNnZ7+xzWeQ766pPJqfDtHHRxzv5+wvZ6fnz3N7dv3vxNuMtX\nv7hJd7fX6S+u/jXf3V/f3lz9RPxc25+zn/wHZRUT/M9+fvWLr766+ldsyv78qnnt//2u92Pn\nn1/99dvr1+nq8ZW/uKrw08PV7c0XV4IJvWBmweWznFmZy8yXmS8zP8OZzc85zcytN9tnRud2\nZnqlO7NecHGZ+TLzOcx8ZlFSszlm/v2/v71789Xr8Kt89zTIFzSKO3ekeS+18bxm/hC56Yeo\n5w9x5kv2897N/CFyluLMfV71Pu/5Q5y5D8Pe5z1/iF71ns/8Icaqy8yXmS8zX2Z+77KbDzGv\nes/z5zPjJKdjvR/izBfu+WFg2GXmy8zvKzO4zPxhWNilynyZ+cIMLjM/Z/S8zPxhzGzEZebL\nzM++NnRme77M/GHE5w9R2peZLzNfZn6WMxez2L6ZD58/X2a+zPy+fmviQ+QkF6b/3s18ZhXX\n9xzDzmzm0525X/Z8mfl9nfl0p0aXCs1l5svM78/MF6+6zHypDV1mfs4zX3LJD2Pm9/z+9mXm\nDyO7ObNvCLznnOQy88mZ/nueY5wZel5mfu9mPjPb/hCZ/ns+85nFqg9x5vc8Sl5mPvnMFwv7\nMGa+3KG5zHyZ+f35ftV7/jtZLjNfLOwi7fd85g8xYlxmvsz8vmZ0l5kvFnbZ8/uz58vMl5kv\nM19mvsx8mfncT4EvM19mPvDJ9+l+l9b7PfOHaGGXmS8zX2a+zPycZ77USS4zv68zf4j+fJl5\nC+t9T/Z8we3LzJeZLzNfTsouM19mPr/4fJn5MvNl5uPU9N9vDLvM/AHP/CHeifsQZ/4Qbfsy\n82Xmy8yXmU8/80cf/fCjj77x1+9W8M3FYvGu+Q3R3+BPDbm988qQw6PzMb1WHn7Uu4jSCGNH\nLWxyQBClAfj2RrH7gJiHZbm1OXEHW8Q3vuc31AzTDQptWJBdBexkwVPVPbtIJy5g0JqnevgI\nYU53raYhR8ti2vq3CXQ+afTLZzeXmSbd3eF2jjnHSfEQhjNZiiN9aWbfnApPw6az7fEci5/m\nBfvGysmBep/4UcD8Kcue0/kGkPCosXoyY5qKl3vExAGHmWmDo5nFNIQ5nAHPhFjjCEOpsZ4s\nfINNMYUxBs5GjMxH9OmO0529+/qYAXdCvPb1EblBofMYvO1ueaAxac0DghrTpz8HGPX6gFgG\nBHUw5j+kyrlEN2nSAcuc5J5jRNc/4DiWP7T7SaseEN5cux+QxyTznyLFHRFxz7nGSGwno5j2\naAzsTRpnioet2u8kWBkwioFHe8LBJIveM2JNCpO7IfvhefmO4p0UIaZoeRgux4h8kmPvFqEG\nzH+S2fZj9Oj6zhhsmN0s98SYMaG61Fjn2B8L2bSe3v9Y6ab1NPjHUjQt0zz1Ty3TvKGblmzG\nk7o7smg/a/oJX1iL6o6nm5ZpVqVMt1/7mbDNG7awFteMbLqrkoU32qeqeVeUZOW6rXbnvPC0\nlZX0hXkL0hWi8G7b4t1d2uYzzQsrKIysC3OIwprbfu3TFTm3Gmw/a/XbWKJh3VFW7NR1JdTu\nUjX9Ws2sfMa6rXZVrWVrV1iz6a6+pNUVa2/l185mu/24L+yXFyRUssSCf5Rstx3ZlDTTrNQU\nfMvIof2WZLoi3WZ9BdtYAeOVxRjTXYwsCVB1ly8Ljqlld47WRUVhqSsCFN1521Xpgnm2xrFi\ngKYrwNbYZMmBC/to99vuw7Yy4N1VtQCzsub2DddttUoyBZm2o6iRT/Ug9LdraR1EFlxPFQBh\nRbrtWgrzluS8Aj+DIFsMAq47nilBfwGwSnM0u1x1BllAmJVYV1hWu80WTUpxaEXpqrOEormL\nEuoUTEwV1L/SalXdqr+Ay63xrphEO28Bz9qnpvC0hYbWQdpVtW67wi4KxlFSYbvSFZTlXbmU\nXECXZMW7clkxonYU391vUfauK7WVfq3USrOVpNGV1Rp+txO3HUv2Xgo/BcGUkHJF6QWDXjH8\nwnild1VhLSXa2n7WzuEKsWlF1YXMv5VgWW4lpy/JbYWCie66RIGCtZGjNcuSg69Ia2R0Kn22\nEuhLtHEQ1bGC9QTliiXPYjCcZV1z4UTS0hkftDAq8ezUpd+l36Xfpd+l36Xfpd+l36Xfpd+l\n36Xfpd+l36Xfpd+l36Xfpd+l36Xfpd+l36Xfpd+l36Xfpd+l36Xfpd+l36Xfpd+l36Xfpd+l\n36Xfpd+l36Xfpd+l36Xfpd+l36Xfpd970q/3N9FempfmpXlpXpqX5qV5aZ538//7n/7z//g/\n/+7/9V//H//tH//DT149PHx1/8Vf/uXXX3/983j75k0Md/nVv/z89u7lX4a/vA31Ij+8ur79\n6jr8Zfjq+i/r27s3L8LDQ4iv3uSbh7/8V/6XMqrIOLMLzbheKFbHRVVzt/A5MSGYEbYKf8kt\nWJTkRmit3M/ffCV/8menlsKleWlemodGB1b5KGyICxm1XajkxMIzzRfZSS9FzbKv1CM6GMaQ\naBnz8/Dm7oIOJ2peMtzn1Sz9vsZL89K8ND+A5sX5L81Ls+MVo/8Gx6V5ab5/zXONChe/PFHz\nktNdmpfmpXlpXpqX5qX5TJsX/nhpXprn2Lx45omaG7/n3AcmrGCSy2iVd8kpGUXljc74ofZ5\naj+uNE/SBWlrqxyzPkkmhDQR/4bY/D72S7+efoFzL6XV3mqhfPaVZ9p5YZmrndH1pd9wvxVr\nv4j8zPpdXO/S72J/x+sXa+UNy7xKzqgkg6srZbnmsq50cM0fezl7vc3db6xc5u537nI5lZzP\n3Y8u/Y6DQ6fqd+7yO3c/P3fcPRWOn/s+Lv0u/S79Lv0u/S79Lv0u/S79Pqx+Fx57qec8Bzlf\n+l36Xfpd+l36Xfpd+l367dpPhVRnVcWYg1LKRF+bxKKrhQ26UjG9b/3OXR8fmh2cu1wu/S79\nnoMfXfz30u852MvFri79Lv0u/d4bfNn46ojQdcRkjjPHlbO+YpazYFwS0cjMqqd+xutkWGBS\npkqlLNDSpnY8qooLVtmnfiFop7H+7FJWWkTPsUEnjUk1M8GJp361T5lzdFMmKMuM9yHTb2FP\nyXut2nl50jylKlTcSZWY9zwKZpnD5FJY45t9m8g8r4LzqlJGeWecy9ZKUdW2SrKRoxRC5GQM\nD5yrSoaK4c3gZZQ2OsXiU78qWlvrzJVUXiks3WN2VlvBo+bWh6d+SWRuLI+sckJplqokJM/R\nMOyr0roZD+vJ3qtQVbVQSgSfI1NMppClyFE0+6BpAq8ZsxUMApM7qIQb7jOLlU2N/IRRGK+u\nrA1cBWkrrNSyilfMxwzpNPpQNSwrQq0qKhtSqK1NtTcOsmdS1E/9mIs1h7m4mK0StfEs0U02\n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\nI6sVuL0keBy02G/Co6vgFH//dHapPQMgOzGmne3fSZ5N26cE5ONI9wiuPXWKiSzjQH9H+ziq\nP45xHyEkHoiM7z1AeV2HkuFZsdRThITnHpG20pDTa+UQrGaUca8eFY5B0Ik4foAhD506zBdh\n3y/gOP0Ac4rjxMnXgfOq0+vqxEI9vQBWa5rrYx2VJZ6YL5yPm51R5nWoDPkIhb8jrOpAKD+l\neSZlqUMsbq9jhaPr7/klK0evM50PFTmFuHtuOp54I/tfJDpa1D0T6nauBfTTD3DKY6m5z46f\npWWVi41HV8vz4/77vX2gcv7Wqyb7Y/chEP1sT+We27jPoHRyCFN6lvWcqenG4XV7CNWcSVQ/\nmcPtGSY23j7F4cEOO9ibVEx3l/WbtP1/tvnHhT+c3Pw15q1v9z/Z/jeu+9/9rb6/0735h7S3\nWlv/HJ9P+PPgnz2s/dXtrX9F/rfe/dgR5MrKeve4I+GQI/6Y+qQ/rr0Y9Ye7N/5O+7Q/SM6f\n1twr0J4V/6gwzboKNv4a+S4WPNWidrDnUZP/5latjRrmO+O9etTQvZva6h6ruDeXta40/2qU\n4Q4b2FThrjS/veESEx29f7oNFPrZgMM/Tbkh+NFjH8MpyiNt+G2v8LaHlzFY+yeNoMYb3agd\nTYku/QNOcNneLU5ZSWe+UdveDMoTVj1lcT8f5dabc4+hN5seu6dhfz6wqs14uTLVX/RjVO/r\nI+xhYMapvjwF2GdDvcbRdxDC78/h1aP8fcx2jwgcU0bZl/L9SbdHWdpTFrXjBnZ8rYdh7Tia\nGiXFHcnNLna6p21vwuOevHH8cDtN3M8lRr2+8c7wj3sKtr/TTwomVDaYP9weAldmHD/uHgR4\na3MWWJ4y4bSsdE/drXT6h2mUZRsJPWCa91cjkoltJrMbQSvpZhc+NjKM7RBMey4djFrKIfLb\nPWLE1P7j8WJ7PjbNCVcheWxu+ucDRrxV1iOWNw8Y7QkvBwvz/Z1GxJiNwDiFOY2hzmP67ERe\nd6R4cxdvtzZn4pQHKkvsXgocqEitW9RWCY0tHG1nJ02oKIvzi82i9eTi4p/3m2XPG+Nx+IgY\nNa78OcXk/u3oouyhy5ArzSlVj1HT7ETCN8x7/Bh/N4kMzVEWL7je+mHkb9zl+69ub1K+KXh3\n9+He3b9V3T68mtD/ECOsLHl1sJWPP+p991P8/PY+77iW/dd+dAlN7D7xzbk+OdG0p/1kqp4H\nhbS3BA87+rHteM4dr+ppHT9OZNqHBuHjwNxpPzk25vVEqnNQTVkUwzMdRWZnHBXOeGnvUVA7\n/0/m9dbj88tdfH+fXc0EfaPXOnWSwfVND/7HZi37KO7YEXGPzHMXq30/PtlHwXM9feaQvbVK\nNd3Ne6RzFnixiyftgTET17vD/LvPsL+4Dlya2eXhej3wG+zcGx91nvCDzXm4kS+Ni3jPWxor\ncHEmK9pXZrML+Mw09p4s9QOw3+eojee45iNu5wzN7Qga60xREsORRXM4mN915A2KLZ8a+qlh\nO5+ozie687rrH6fbUP2vd/p81Hli+oeRnT6m86j7lu2swnQ+Ef1TdMXTnb0rMNW/wgHBd/uI\n/vWo/sV3pxhYT3cXzSe883pXF91H3be6s3fNsGl01PQxZyN2KDvi6OrJ9a9+YJzupF1JTRL9\nGM0NWFt38b5/70+CXkXGAY/vrqjrR923BhbbXVHXTgYgZKDh+2fvWqDovDXgawOwZ/rH6e50\nQFDdnXan6Ap8DAC6TmPSo66RDti4H7GL7hTdzt25Oktdtd8BkB6woK5auj4/gHNd6+iabVct\nXWV2R27WwzufiP4NjgntA7DS3c6Aq3WnGAh0XVPqNnz/gKJ/zV3FDWDSGELRjf9PjaK5dWlM\n18q7G+o6SXfVXT13P+lKaGDAAR0OyKMjxVLUWP1sYOKusLqw0RXfmADfnUJ05hoIll1BDDCy\nEs1d59if/o/89dv7p0r7Z7/MNylXofjwk/+eb16uPrqtrt/99N1fvKny3dX/fHt3/dTh279I\n6fr+5XXu77I+/Lf+S3jz9OSz/xJuXr59ePrxk1/c57ueZ9//p3yfX4erv3kVfvXwtJ5P/uHt\n3f/qG+y/48dc3MYnv3jITb9P/+n2ZU7Ndv5Hvn+V7/LTGcH3flG9vclXv8xv2pV955e5Qqeb\nl7f9e16b/Tu/fHV9U729e1OW6hZtrAy0ppqSMv4pvL5+Gcovf/8XD29fhqu/Dvdfvm2l3J17\nUN1rK/jkf+Yv8927H37jn8Pr8OVVeNMM9tk/vE3h9ZuB9a7awtapt63mm/98/eW75m/+U3h1\njc756q+v716Fm6cp/jZX1/elyaHS6zo8XN+1VkF/HPZJwb/xi9f5zcN9hu09ffIPt+n67uqf\nWsv59L/m19etZf/127vqNvzv/rV/9j8gvJfN2r731+Hmf4WrX5Lx3bWrWje0DS/+xd3b0Hre\n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\nx9PHn9E9xvvm7r623aC2rGKaPGcyueO8siHVafKeVQenFfzu1nUkgJ+wogIm7b/2SWBQRvMT\niuQIDGeEBU0NVPuJcYdX9rTlMQFzpqB1BMs9FK340D6boKotJrsH2ToCTzuAjI6EVXu6/XbM\n3Y1fzS3kWVleP3Ea98KO9GqmcLo3tZ8/Hu3hoXsb4Dh/GAoIuyUWO4jugHzq+KH5VJ+NtLXx\nRHr/7PcwGDwbDZsTMMrNkToZcsJ+TD5u/WXXOuxUpWyV6QiznLVGU27uh5vbe4xD76mGPS9H\nGi/DqZFk7r/3+lm6vs/hPs824KW5V/MTKDvfHXiSRbi5fhNev0jhTXiZr74OD/nuxf2r27sH\n+vE+5/T6+ubli3+Bg1w/jHb8M2v+eGiTp17cM24exUI/dO1O3V66+XLs0L//1e3t3YuvEOwe\nyMnvrx/y1Vmo9Hk0J0j6g27+tGBmXyOyvIi3b77KD9cP17c3p17jOTS/+1W+f3gRHh5CvBjW\npfk+NEeb9A/et7B9aa40Z09V63z3cP36YiZn0pxdHxsDbvz4o3c/Xr0K9y8AG2/AKF68uX17\nk+5PLYlzEeBza+4hgGFbOanof/hkqMvo9vr25anFPLuivvvy7evXv7q6f7i9+dW5KOCkzvT7\njwI5OjJ98Agyj7COL8ZjBLP50PW8Q8GleWnOZGDff3LL1dB2Dqt/n5vHdP25c9I/kux/S/bi\n1e3rfH/963x1l9/c/mt+cX8bv8wPzzUvee+aR9KSH5zmKt5lJATpMcxfURn8lspkKTW/KG7U\nOn82YZZTC/689fXcmnvb15TJfjzCrg6/oONbwgfgXlPlO1+n8zLxs13CM7XXM1rK+9HcT6Dn\nqY6TrOqoPn2ecn9msHZpvv/NPSjDxZrPvDkmfTjoMuau9Hxa55t4MZ9zaYpHdSyvFMKsqlzf\n3r07ccWnb96+jq/yoTz/j4pz32PCdH3zdNq7bi//Zr3vu/WdWog7Nn+3tP9TL+pkzf843RI3\nbWXKdH9enG7I4A/oKkezhB8P7eHUFnBYj3p6VlLQxKD0k6IUDwOS56exUbD9Psar97n5tzug\n71d3b29uoPIB3Z+J9S5G7W52Ez6OsX4+ZpbjyfrioZfmuTSn86qL9Z5r80w1M3d95Ldf3b7J\n9w85YItU4wl3l/tTZ9I8pGo++/r2Nr2+fXj342/SfdaXd7df37x4uMv5qYi76K7gKt7d0rdD\n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\nYiQKNjv1bJsul1X5nJ0aXJC1mLBQXsImMrhJHY/LFrjswvcZ6dwqOkwVPG5WLi+xLeaHTM4e\nTV5WvHfkhM9hd7kiIVVTMEtC/obLLF2unymX6TOvgYTExMt0y+SCmMNmtTlniTSKWVWHZfcs\ni97kaEFehfPhnPtlNcKm63AiY/kPKh04FjAVtDoel84y9TFMLpHjaGxzZueZXKbB+dCOz8yL\n02SXc1seDTobHls01aoNjv82y1hRaOHcMEvVTZ/1W5yemlxss1HKyhwME5LT5hSPy+EtTh0s\njnLLZEJ1OVuyOG9Hnf8GQpKuY1sdp+94RmjY2+aO45rb264RWj037HfaQciEoTyuFzj9HTMI\nAsfYdky376P8z/D6DpJI6DChK4+7KPSp4vMDN2zvtHth2+k5hr/jd3Yc3+sZRn8buV6qPxdm\nXLvvt0Pf7O+gZMjp+UHHDMMdr7Mdeju2a3Ryy8Nzdtq+7wVuxwwcJIltDw3rODtGv2N7O2xe\nVbmp0lf1uKBnuWHYb7u90HOsbSvoBJ2dwPXbbXfbtGild2HG9fs7voukgPIYz+mhUf6243jW\njmNZPRTHrVWPQ6vY6XVsO/S3Q1SlbQehaQVGz+u7Xi90/d5FG9dre8jCvMDbDhwnQOWia4a+\nYaJc1XFQjmVctHFGsOOEZrDTNwwDVVRGZzswUIJnOv6222ebQRdmXN/ubffN3o6JMgXH67eD\nNvJCPexPjdDfobV5y/P9wPcNd6eN99h8v2P45o7f7vdN5MFCmqBcmHGqfKl6XNAOdtoobBnG\ntuEEbr8TbPdDlBhbiNqg75gXbZwqX9o7tuUEZttre9sOCpeBtdMJbasf9Do9H6UBF22cav5y\nUcbtbAdeJwjdwDAQ1MT3mKG3bQfmDsrOejurHocgNgL2tneMwLF3dradwPc8u9MJ+kG7R4uv\nlY1rW9522DYdlGC7TthG7n/bQMGt33M6PZNtfTZ+XNV1meq4vhNu+27H6jvtnmMaPd9BKarX\n91D2t22adNdBeVzT11t1Pb2qcU3341WPU+VL0+v9qsc1va5d1bim15e6Xr3Y9WrT67zK68YV\n7Ut5jh06HZQk7uA4HxidfrvdNnbcwAyNttvx9Tg9jh+nmieq1vFNry+rHnev7eeo1jO6jm9W\nvV/1/uRF2Y+out6velzV9f6qnl/qceXGVb4vhfD3USmx3bM9B28joHrK8HqW5e8Ebddx9Lhq\nxinb5QVZR9Xvv6jqc9X7iU3fz6l6nDJfGp6fVj1uVfvZTd9vqnpc0/eVqx7X9P2rqsc1fb+4\n6nFNj+eq45q+r1z1+01NH9f0fZWmj2v6c92qxzV9/2pV4y7KvnLV4ypbh/6uRH9X0qBx+rsS\n/V0J8YP6u5JGjWv6vsS99p6O/q5Ef1dykcbp70r0dyXrsC/R9Hq56e9xNP07C/1dSbO+F9Hf\nlejvSvKMa3pdq78r0fXqvVivNr3O09+V6HH34jj9XYn+riTPOP1dSbPG6e9K9HclecY1/fsJ\nPU5/V3KRxunvSvR3JeswTn9Xor8rWeW4pu8r6+9K9HclecY1PZ7r70qa9b2I/q5Ef1dSx7im\n71/p70ruie9KHt4fDHfDcXhdcv3Q9mC8FwyP4Mtq754DP7g/uBFO9iq9enhvNAz3w92hZMpg\nG10eyFY3d/Oi64eC/fBgGO7VcHn9aBv3FLoMJgfBQXC9+ssHdgfjg6Cqi0en4UG4fy2cXt2p\nveeRg/DaUTAcDKdJB2LYdtDbo7Kvp0OYdmHHg+GNcHw0qfRKnGR39I1vUDOo6CplWtVcPTwJ\nx9c41c57/dBesB1Og0KXD04Hu4PJtORVtoOc95e74TYS3J7sugzqBY4873UdGiTMUUN8qNFl\nz1/eW154OQ41VyB8JBz2g32Ocxe6Yz7TSceDGpxzXaEr5eRWGQEyA8LiSF5RPFkUFBZdL4gL\nOVPelV8vWv0wuMY7jFVfz7O7YnTZBZbAnEXVXG3RUAjtNWS5eVOYauNoHcnKkmJqbZlK1ca0\nzPqwgo6ysavsdR05eoXxdEG0rSorUSi5QXTpbTTrejANx93J3mg8DXbD1uFoNO4e7gfDKXIq\n3clgGrYmYdjHLqb7zaNgfzC9Ed/5T+bulAx7YGc8ojF/88qVK5nNx9NIJVNdR1N1e6ODw3A6\nmA5GSQx9Pk384TjoTQe9UHXugs3HDsPJtBtMp0HvWs1Tcc1n51iymMufR6pxEOx3+8iRYR5C\njM4jlCUssuqFLKHZShMnmtOqCXSzCExMRmZhl1M3i8izLfDXswTXEs3oufT4/mASBhNlBn6B\nQyiXw0LdvhxPq2BhK/Iw/aGy3/latgRE36/qUZ/imV0Bpx7Y2R+N+nVTDTdfyDndAuoLcuCL\nBeYtqBV1NQvF4/rp/uxCx7NWmcDC5tPFg9BjxJRbFagz11TM5uCbF0WgXwHcQa4JytpdA5qP\nj6Z74XjSHYcHo1fDsoIrZpCL4+oCQS620t9WTSeWJEMlOwOXrZjML2JZpc0nJfVceclXepuy\nJ258Yr7c5i/Pq1wwPkDXaZfxpQybypmN19VcZBMPEF8YX3whyeXndTtfylpdnFcpZUtHtGrT\n51ri4+Og+i0/9RE3q9K7ZQ/thOPpYD9B8sBkOhrSja7do/19wEvK+udwPb0XTLqIsweIxu7B\n6GjYT/b/fy0e2CKIWmTOlnR0XYY2R+4STPuzybpzrvUxjk/yLj7UJRMR1d4f7TaBPcvnN9z8\ngpLWfU6ELJObrbSJqCjM3BTyGVP2q3yXxL9k4FqS7JVXUAFEea6HS+hKfvYq2LuiOlRBZ7PN\nX4mO+4ejYXWUfkY9wn1G3d7X0feWIGk18aishT8gidBN4WoF2UlJD1vYtyhP9ivyhamF9JLL\nUr69lBtf2LycYM+lkrk8YWlOV27vKeWpItKViqNVEFAN3UUUtz5fJqdmsVPKqycVuLkc9lWE\nz3OXuVPJkil9tWyDZp/bgjg42u/t0T2SJ3bCYS/stw7HR8PhYJis+tm4G28Uhf3udrgzGgNL\nei4Fb6VRc+MejNApIP8yBEsQt/CW1QjvnfX7Fe7ywM3Pg5QQ7ah9bq5pqzNkXoiSqKHO2ssL\nxK+oJQubVeFptCDh5m9nEacmZis/isr0MJklTeAETdhfpIdcs5TRZylPTtE/n8nntBODaQb5\nUYUZ5FxJvRYlSVgr0GUOcyVqrciHtGh/VWVmYP318h/WgDQ1qvFYkbxC3Cu4PBUkS9PqPM2q\nMhYV+S49GC4tHWtO3rdiqmuIK5W4FvjO31yGd166keSKennuu6IU0/KmT9XG3arT5TzRNL9u\nqFC7qIxRiUJfAuepzbs/nx43pxGl3E7VJlQqKJdlaz2olhaMsnhXSVZViCkqMzevqM7i5eMx\nTEXLi3jTOftcTkW+sKlaDagrSSlbT4RQiZLkN9GqjLrsXmapVK64Zr1cIknInZHAzRxxOGGr\nlEnpTe3ftI1v2UZ3b7QfTgbfDlvRe4Ddyah3LZxOWr1xiNbZjzbQ41t+OfOWPIM4sjs56Fik\nAEpzPw72VklGpc3PKwhmCaGiJv6URptX3QqofR421YwebublwXKbpUVcM0/rt/ylu7i8CqE0\nXsURLRJVEe4pEVdOR5ZvQAUYVYtQy5HEJ5e5lfrLc/MtvgOO3CvxvqVNukqfsFzlX1WmtFD6\nzUua1iuVqt+rZUthjax3Zbqz1EUsKSxWJveVJQGXV+Rf8gfdVdcyF6pcW/rdxcPa4+nJAFXK\nnY01hKPl0taa9asaD1pJNlPMR61RTF5VUC/HojxZ7Uo2lypX98pWsbYas7LQ+PksJ69K58JQ\nslSrr2zHaTk70XWYsEp4WE/nmAOR2kOvp3rjET6aot/dxjMG4+QrmIfHo6A/GfRDyTVHSQbo\nkd1xMJlg/MnYZL74+um90UE4mYaBQEBdLnn5M3JNKbvh4V+9Phr190fTVnJbS7i/NQ3H46CH\n5B8LgXztszseXR92p+MwTOzsqQTVvEQqZ03ONeZpCuq03GjONX9VZJUom0rZ+lAsQNXxv6NC\nIdUeWGmUdENpeUVuz7viufFKdH1OZEmtOqYwnxLdWZZQm0DyOPqC/JmfwsulxRlEPEldaDy4\nIN8+K84u50oNvu0zC/z8yjziV5QkVYj6OkO2o0T2QmprXH1um1mZCpSh6SGpWRZsFjMUecz5\nckYO1hRlXhx+ADUtoT0l1qIWnaslVyUzLRk8vyyk2TW6vLzsVxr/RVX1VguXCT8q0fq69a2a\nzLtyC5cjfKLSQAKZ21y9ntdjNytdKVnEKGGqsfzl+Uqj0UK+fgmQagmLXpLOPzm/9RH3/0qG\njspTe94jLUzgq9MSaFrpNsH81lhBxqmLu5Ak09uHD744DNn+4mqvHngpGH4jqOzixf1wJwAn\neujF4bVwsgeOfOxfBtuD1h+Fe8OA/l7N744wF1v/4Wg8uEFvejn8RjiE1yGfOQcziiFJ3bZK\nQipSiRSXXxmGB8EN+Cp12+U/HuwfBMOg9XI4nARZYnzwq3uD/d3kavNfvPJKAvh6eC3cz743\nTXgGdRnKAmLe/N2vUzpevB5sh/tZC0sPycPqFGqQEMaQOaOp8FJdw+RMffTlcDdo9YMDmuUV\n50ox5UxNlwIpry91F68Dc6quvjD5yBRR0rk2X/n67+f2OlKXnEXdA0j9vjEoqcNznE6vPuuq\n2HTqjjLLG6jSlYFfKibOfkH7hqId6DuhzhyRQSppxQs4BPPzgyPUO+cIfmmwfbQLi+hTL6H7\nwqy7U5QDHK7PkypEwbQqPvZyuD0OW6/sD4IJuHbOM3BNhYwoIxqqR+fHvj46mu61fj/s7cFW\n/fgfBb291ovjA/RnsDeKex/5d+HBdjge0J8fBpYJM0eWDcBCz3A9hbIrntlcJqKQ2oCLSWUw\n+VIKlTwjHShk6OeuUsqVjpLSi7RUCjI6RaCqS0/DAFNWZAKkPsoFRFbWKw/WC1O7fInnQ787\n+nZwwJIT2VQV5Vlp/5uR6WfmFwvz7Dm/BA2ZW/jcHb8fjoNtbCTbIcjDlAkC+pOh9MpqmSNj\nluuVAnuK6lSGoktNlGumiU5XZf8quCE4f1AmGXl20RwBpjaP2OQjVVIUeU6lmumVyTTgUMX1\nym5Pbz+9sjedHm698MLoMByOR5Pg6mi8+8LOaHzQDyeD3WE4fuHlr75kOl9zXrzy0kv2y1cc\n55WXrvgvfvWlK698zXQ9y/atr/kva2QamUamkWlkGplGppFpZBqZRqaRaWQamUamkWlkGplG\nppFpZBqZRqaRaWQamUamkWlkGplGppFpZBqZRqaRaWQamUamkWlkGplGppFpZBqZRqaRaWQa\nmUamkWlkGplGppFpZBqZRqaRaWQamUamkWlkGplGppFpZBqZRqaRaWQamUamkWlkGplGppFp\nZBqZRqaRaWQamUamkWlkGplGppFpZBqZRnbRkKV/4eA+O2mY8h5L6BEbrjDYEXpEPCLImieD\n++lQRpo43JBPkgHKIES8K2MdIvNELor0ZMwu4skYIyLMIF6F9xncyFCKPFPwUlW5T1xZLsU1\n5IwROZ3B8lzMUxmsYmPFOJ2hm+LakzG8WFT4KjZEq8/FswyzEeWTYdglvZDIqgzTyuCP6BWL\n+ZcMwlSkk6FTGQgzhFvMiai4XZFjGfRkBouM+VW0LJeNqSxaRX9FwgTPBcZD0T0XC5UZpOVS\nSpWMIcMyc8k+l7fPoCeXO4DimBiaMmwzF88c+YKKyadkHBN6ILtTtEXRuWQE4pK2mEvBcvlK\nSDDrlmkDCpzLeeg8u7w+Vp1nK+VIGaLUWbYix3SWnV8+OsvOFq7OsvNbeEVZNuABdY4NLlDn\n2Pk1OleEgtiQ1afkpy9Mjn3/Bm7EHQ8Mg4Nwcokk3pfejDsf/uevhuPJYJT8rvBjLx4etv5t\nquvxoH+0P510g+3Rq6GdOMen073dvUE/YXuwG8bNB4PDwy4FXA6O+oNRtxccTo/G4VznaDgJ\nh9O489mocxz2RuN+dzINxlP648kPbx8N9vsM60O9YBKyy0fIJV5q3PFEbw+NH4fD7tGwH5pe\n3P3MXDe3gKd7o52dMOz2w2C6h8g9moRzkJ1BiEj41mQ66FF0EeRg92DaRaveH1CCPx2DDveD\n4XQw3J0Df2YevD/qBVOO/b3RweF+iBjQnQ7oqh5KM+xyP5iiyUf9wQ7D/EQ/7AGLIN3iCp7E\n3QD5z+J+Ce3PpWBzhD/cD18d9MLfSx7RPNU/CK6F4+7OaNRHpA7D5MfJPx0DBsOd/SMR/FwK\nPBi+Gk6mB8nCn04Bp+MQaXgEeV6EdHkmJNAUuufnurvBZBJOJwKhMXQ4Gu4E44MY/KkYzFPx\nFN/XRZzqU3bzAEbYI2F/gGVN2fhE2D+K+NrdD19lPzqOH25RlX1qN5zsjQBhxwBR3E9HAEDg\nz0cQicg/PQedE/qTu+PwVYCOqF8k4ynSD1DxHAFIiHg+DZyj4Ym9ve5eGPSxU9kZUPE8h7oP\nwoNtxPRD5FAGvcEhMprEnhBwMvg2dVzXwu1wnyrLfjCZdic3hr3udHSN/vr8w/OWehCMB9Ng\nHzus6VGiAc8cjMaIyABgCgWJfHk2AQGs+UwCk3DnlwT4HKGXh6PYfXSv7yVm9lSqszua7iWr\nHx4ddCdH41e7kadKtJ12IyeQcID2ES2h09FeJLZEIWhnTK0w22FwGNwIBMzXg+G3k94HUS+S\nZxK7RsFO91XkKccBFdHo+pC3uqcjpJBrjyGiKJ6PITCzn4mhkJxikNSzYzWMHUDQmzJCkHJi\nLTraPhhMuED84CEaR2Prp9AVdQ0Jp3Ef4gniwHSUsOUR1LkboiCXdDyKOtLq/izqGQyRjmMO\nDob9AYq8U24ezEF+PO07Gg6ScU+hPtAAnkcALD3CBuTZgvG3w/3BdmKVc9CUjj09B2Sa9uwc\nhNe3Z+ZhTOvmaUnr3jwtKQ2cn5HXw2RGoqDp9T3Ng1KLe4KHsJU9xXfzy3oyBWBrSk2eXlBq\n8tRqUrPwS8EcwloQqeXkcLC/jxK8McchpBvh4NUwHoHVJrG/GMIFr2fH4eRwhHQPeRWscrxe\n8DCcr3X3BxTVcxwMeSLksrmM7rkJcs09okpcmphkn5PwW3Hz/smA+vdfmhyGPWxVKIQinAGS\nQ29KVh8P+Fx6AKalOwx3kXW9muD4YsaQiMqMgYcjRM38wM/KBtI5v5QewbCM56n7VJwm81ni\nA5jhNLMgDmXaHRwmCoWXH97o0gQzUYG4fyfoYYPcC/b3wyH1O5+Dobz0HkGqEUwPWHr6DNYV\nrOMD7M66JPNJxiIX8s0jLoF/EPnkMU0aH8JXDPgwvuRU4SmiulDeEwGAvCcCQHlPBJHlPXPQ\nOV/+4PXROOwnRvTAtw72h4mef+rG6Gi6N+miGoNWT0/yfaT0SNdqj4xH168m9dpl9P/Ga+if\nf/zHf/j7+aKuh3KTpKjbTIiZbu93+zuJRaCrxPOjMiG4ujPGDLx06R/+PyUxyVRcLwwA","type":"binary"}]
