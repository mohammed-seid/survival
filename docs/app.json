[{"name":"app.R","content":"# ETH 2025 Survival Survey Dashboard\n# Revision Date: 2025-01-16\n# Description: A Shinylive-optimized dashboard for analyzing survey data.\n# This version minimizes dependencies and uses only packages that are\n# fully compatible with WebAssembly R (webR) for seamless deployment.\n\n# --- Core Libraries (Shinylive Compatible) ---\nlibrary(shiny)\nlibrary(bslib)\nlibrary(reactable)\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(stringr)\n\n# --- Custom Color Palette for Enhanced Visuals ---\ncustom_colors <- list(\n  primary = \"#2E8B57\",      # Sea Green\n  secondary = \"#20B2AA\",    # Light Sea Green\n  success = \"#28a745\",      # Bootstrap Success\n  warning = \"#ffc107\",      # Bootstrap Warning\n  danger = \"#dc3545\",       # Bootstrap Danger\n  info = \"#17a2b8\",         # Bootstrap Info\n  light = \"#f8f9fa\",        # Light Gray\n  dark = \"#343a40\",         # Dark Gray\n  gradient = c(\"#2E8B57\", \"#20B2AA\", \"#66CDAA\", \"#98FB98\", \"#90EE90\")\n)\n\n# --- Helper Functions ---\n# Custom formatting functions to replace scales dependency\nformat_percent <- function(x, digits = 1) {\n  paste0(round(x * 100, digits), \"%\")\n}\n\nformat_number <- function(x, digits = 0) {\n  format(round(x, digits), big.mark = \",\", scientific = FALSE)\n}\n\n# --- Data Loading and Preprocessing ---\n# Load the raw dataset from the RDS file\ndf_raw <- readRDS(\"df.rds\")\n\n# Clean and preprocess the data\ndf_processed <- df_raw %>%\n  mutate(across(everything(), ~ na_if(., \"---\"))) %>%\n  mutate(across(where(is.list), ~ sapply(., function(x) if(length(x) > 0) x[1] else NA))) %>%\n  mutate(\n    # Ensure time columns are in POSIXct format for calculations\n    completed_time = ymd_hms(completed_time),\n    started_time = ymd_hms(started_time)\n  ) %>%\n  mutate(\n    date = as.Date(completed_time),\n    week = floor_date(date, \"week\"),\n    month = floor_date(date, \"month\"),\n    hour_started = hour(started_time),\n    day_of_week = wday(date, label = TRUE, week_start = 1),\n    is_weekend = day_of_week %in% c(\"Sat\", \"Sun\"),\n    duration_minutes = as.numeric(difftime(completed_time, started_time, units = \"mins\")),\n    is_night_survey = hour_started >= 19 | hour_started < 6,\n    is_short_survey = duration_minutes <= 5,\n    is_long_survey = duration_minutes >= 60\n  ) %>%\n  # Ensure numeric columns are correctly typed for calculations\n  mutate(across(c(starts_with(\"ps_num_planted_\"), starts_with(\"num_surv_\")), as.numeric))\n\n# --- UI Definition ---\nui <- page_navbar(\n  title = div(\n    icon(\"seedling\", style = \"color: #2E8B57; margin-right: 10px;\"),\n    \"Survival Survey Dashboard\",\n    style = \"font-weight: bold; font-size: 1.2em;\"\n  ),\n  theme = bs_theme(\n    version = 5, \n    bootswatch = \"flatly\",\n    primary = \"#2E8B57\", \n    secondary = \"#20B2AA\",\n    success = \"#28a745\",\n    warning = \"#ffc107\",\n    danger = \"#dc3545\",\n    info = \"#17a2b8\"\n  ),\n  \n  # Global Filters Sidebar\n  sidebar = sidebar(\n    title = div(icon(\"filter\"), \"Global Filters\"),\n    width = 280,\n    \n    # Date Range Filter\n    dateRangeInput(\n      \"global_date_range\", \n      \"📅 Date Range:\",\n      start = Sys.Date() - 30, \n      end = Sys.Date(),\n      format = \"yyyy-mm-dd\",\n      separator = \" to \"\n    ),\n    \n    # Site Filter\n    selectInput(\n      \"global_site_filter\", \n      \"🏢 Site:\",\n      choices = NULL, \n      multiple = TRUE,\n      selectize = TRUE\n    ),\n    \n    # Woreda Filter\n    selectInput(\n      \"global_woreda_filter\", \n      \"🗺️ Woreda:\",\n      choices = NULL, \n      multiple = TRUE,\n      selectize = TRUE\n    ),\n    \n    # Enumerator Filter\n    selectInput(\n      \"global_enum_filter\", \n      \"👤 Enumerator:\",\n      choices = NULL, \n      multiple = TRUE,\n      selectize = TRUE\n    ),\n    \n    hr(),\n    \n    # Quick Stats\n    div(\n      style = \"background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); padding: 15px; border-radius: 8px; margin-top: 10px;\",\n      h6(\"📊 Quick Stats\", style = \"margin-bottom: 10px; color: #2E8B57; font-weight: bold;\"),\n      div(\n        style = \"display: flex; justify-content: space-between; margin-bottom: 5px;\",\n        span(\"Filtered Records:\", style = \"font-size: 0.9em;\"),\n        textOutput(\"filtered_count\", inline = TRUE)\n      ),\n      div(\n        style = \"display: flex; justify-content: space-between;\",\n        span(\"Completion Rate:\", style = \"font-size: 0.9em;\"),\n        textOutput(\"filtered_completion_rate\", inline = TRUE)\n      )\n    ),\n    \n    # Reset Filters Button\n    div(\n      style = \"margin-top: 15px;\",\n      actionButton(\n        \"reset_filters\", \n        \"🔄 Reset Filters\",\n        class = \"btn-outline-secondary btn-sm\",\n        style = \"width: 100%;\"\n      )\n    )\n  ),\n  \n  # -- Main Content Panels --\n  nav_panel(\n    title = \"Executive Summary\",\n    layout_column_wrap(\n      width = 1/5,\n      value_box(\"Total Surveys\", value = textOutput(\"total_surveys\"), showcase = icon(\"clipboard-list\"), theme = \"primary\"),\n      value_box(\"Completed\", value = textOutput(\"completed_surveys\"), showcase = icon(\"check-circle\"), theme = \"bg-success\"),\n      value_box(\"Refusal Rate\", value = textOutput(\"refusal_rate\"), showcase = icon(\"times-circle\"), theme = \"bg-danger\"),\n      value_box(\"Avg. Duration\", value = textOutput(\"avg_duration\"), showcase = icon(\"clock\"), theme = \"bg-warning\"),\n      value_box(\"Enumerators\", value = textOutput(\"unique_enumerators\"), showcase = icon(\"users\"), theme = \"secondary\")\n    ),\n    layout_columns(\n      col_widths = c(8, 4),\n      card(\n        full_screen = TRUE,\n        card_header(\"📈 Daily Survey Progress\"),\n        plotlyOutput(\"daily_progress_plot\", height = \"400px\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"🎯 Target Achievement\"),\n        plotlyOutput(\"gauge_plot\", height = \"400px\")\n      )\n    )\n  ),\n  \n  nav_panel(\n    title = \"Enumerator Performance\",\n    layout_columns(\n      col_widths = c(7, 5),\n      card(\n        full_screen = TRUE,\n        card_header(\"📊 Individual Performance\"),\n        reactable::reactableOutput(\"enumerator_table\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"🎯 Target vs Actual Performance\"),\n        plotlyOutput(\"target_comparison_plot\")\n      )\n    ),\n    layout_columns(\n      col_widths = c(8, 4),\n      card(\n        full_screen = TRUE,\n        card_header(\"📅 Daily Productivity Heatmap\"),\n        plotlyOutput(\"productivity_heatmap\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"⚠️ Quality Alerts\"),\n        reactable::reactableOutput(\"quality_alerts_table\")\n      )\n    )\n  ),\n  \n  nav_panel(\n    title = \"Agricultural Analysis\",\n    layout_columns(\n      col_widths = c(7, 5),\n      card(\n        full_screen = TRUE,\n        card_header(\"🌱 Tree Survival Rates by Species\"),\n        plotlyOutput(\"survival_rates_plot\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"🌱 Detailed Species Performance\"),\n        reactable::reactableOutput(\"species_table\")\n      )\n    ),\n    card(\n      full_screen = TRUE,\n      card_header(\"🗺️ Geographic Performance (Surveys per Woreda)\"),\n      plotlyOutput(\"geographic_plot\")\n    )\n  ),\n  \n  nav_panel(\n    title = \"Site Analysis\",\n    layout_columns(\n      col_widths = c(6, 6),\n      card(\n        full_screen = TRUE,\n        card_header(\"🏢 Site Performance Overview\"),\n        plotlyOutput(\"site_performance_plot\", height = \"400px\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"📊 Site Comparison Table\"),\n        reactable::reactableOutput(\"site_comparison_table\")\n      )\n    ),\n    layout_columns(\n      col_widths = c(8, 4),\n      card(\n        full_screen = TRUE,\n        card_header(\"🌱 Survival Rates by Site\"),\n        plotlyOutput(\"site_survival_plot\", height = \"400px\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"⏱️ Average Duration by Site\"),\n        plotlyOutput(\"site_duration_plot\", height = \"400px\")\n      )\n    )\n  ),\n  \n  nav_panel(\n    title = \"Data Explorer\",\n    card(\n      card_header(\"🔍 Interactive Data Explorer\"),\n      layout_columns(\n        col_widths = c(4, 4, 4),\n        dateRangeInput(\"date_range\", \"Date Range:\", start = Sys.Date() - 30, end = Sys.Date()),\n        selectInput(\"site_filter\", \"Site:\", choices = NULL, multiple = TRUE),\n        selectInput(\"enum_filter\", \"Enumerator:\", choices = NULL, multiple = TRUE)\n      ),\n      reactable::reactableOutput(\"explorer_table\")\n    )\n  ),\n  \n  nav_panel(\n    title = \"Advanced Analytics\",\n    layout_columns(\n      col_widths = c(6, 6),\n      card(\n        full_screen = TRUE,\n        card_header(\"🔄 Survey Completion Funnel\"),\n        plotlyOutput(\"funnel_plot\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"📊 Survey Duration Distribution\"),\n        plotlyOutput(\"duration_plot\")\n      )\n    ),\n    card(\n      full_screen = TRUE,\n      card_header(\"📅 Weekly Performance Trends\"),\n      plotlyOutput(\"weekly_trends_plot\")\n    )\n  )\n)\n\n# --- Server Logic ---\nserver <- function(input, output, session) {\n  \n  # --- Reactive Data ---\n  raw_data <- reactiveVal(df_processed)\n  \n  # Base completed data (before global filters)\n  df_completed_base <- reactive({\n    raw_data() %>% filter(consent == 1)\n  })\n  \n  # Global filtered data\n  df_filtered <- reactive({\n    data <- df_completed_base()\n    \n    # Apply global date filter\n    if (!is.null(input$global_date_range)) {\n      data <- data %>% \n        filter(date >= input$global_date_range[1] & date <= input$global_date_range[2])\n    }\n    \n    # Apply global site filter\n    if (length(input$global_site_filter) > 0) {\n      data <- data %>% filter(site %in% input$global_site_filter)\n    }\n    \n    # Apply global woreda filter\n    if (length(input$global_woreda_filter) > 0) {\n      data <- data %>% filter(woreda %in% input$global_woreda_filter)\n    }\n    \n    # Apply global enumerator filter\n    if (length(input$global_enum_filter) > 0) {\n      data <- data %>% filter(username %in% input$global_enum_filter)\n    }\n    \n    data\n  })\n  \n  # For backward compatibility, use filtered data as default\n  df_completed <- reactive({\n    df_filtered()\n  })\n  \n  # --- Initialize and Update Global Filters ---\n  observe({\n    data <- df_completed_base()\n    req(nrow(data) > 0)\n\n    min_date <- min(data$date, na.rm = TRUE)\n    max_date <- max(data$date, na.rm = TRUE)\n\n    # Update global filter choices\n    if (is.finite(min_date) && is.finite(max_date)) {\n      updateSelectInput(session, \"global_site_filter\", \n                       choices = sort(unique(data$site)), selected = NULL)\n      updateSelectInput(session, \"global_woreda_filter\", \n                       choices = sort(unique(data$woreda)), selected = NULL)\n      updateSelectInput(session, \"global_enum_filter\", \n                       choices = sort(unique(data$username)), selected = NULL)\n      updateDateRangeInput(session, \"global_date_range\", \n                          start = min_date, end = max_date)\n    }\n    \n    # Also update local filters for Data Explorer\n    updateSelectInput(session, \"site_filter\", \n                     choices = sort(unique(data$site)), selected = NULL)\n    updateSelectInput(session, \"enum_filter\", \n                     choices = sort(unique(data$username)), selected = NULL)\n    updateDateRangeInput(session, \"date_range\", \n                        start = min_date, end = max_date)\n  })\n  \n  # --- Reset Filters ---\n  observeEvent(input$reset_filters, {\n    data <- df_completed_base()\n    min_date <- min(data$date, na.rm = TRUE)\n    max_date <- max(data$date, na.rm = TRUE)\n    \n    updateSelectInput(session, \"global_site_filter\", selected = character(0))\n    updateSelectInput(session, \"global_woreda_filter\", selected = character(0))\n    updateSelectInput(session, \"global_enum_filter\", selected = character(0))\n    updateDateRangeInput(session, \"global_date_range\", start = min_date, end = max_date)\n  })\n  \n  # --- Quick Stats in Sidebar ---\n  output$filtered_count <- renderText({\n    format_number(nrow(df_filtered()))\n  })\n  \n  output$filtered_completion_rate <- renderText({\n    total_filtered <- nrow(raw_data())\n    if (total_filtered > 0) {\n      # Apply same filters to raw data for completion rate calculation\n      raw_filtered <- raw_data()\n      \n      if (!is.null(input$global_date_range)) {\n        raw_filtered <- raw_filtered %>% \n          filter(date >= input$global_date_range[1] & date <= input$global_date_range[2])\n      }\n      \n      if (length(input$global_site_filter) > 0) {\n        raw_filtered <- raw_filtered %>% filter(site %in% input$global_site_filter)\n      }\n      \n      if (length(input$global_woreda_filter) > 0) {\n        raw_filtered <- raw_filtered %>% filter(woreda %in% input$global_woreda_filter)\n      }\n      \n      if (length(input$global_enum_filter) > 0) {\n        raw_filtered <- raw_filtered %>% filter(username %in% input$global_enum_filter)\n      }\n      \n      completed_count <- sum(raw_filtered$consent == 1, na.rm = TRUE)\n      total_count <- nrow(raw_filtered)\n      \n      if (total_count > 0) {\n        rate <- (completed_count / total_count)\n        format_percent(rate)\n      } else {\n        \"0%\"\n      }\n    } else {\n      \"0%\"\n    }\n  })\n  \n  # --- Executive Summary ---\n  output$total_surveys <- renderText({ format_number(nrow(raw_data())) })\n  output$completed_surveys <- renderText({ format_number(nrow(df_completed())) })\n  output$refusal_rate <- renderText({\n    rate <- sum(raw_data()$consent == 0, na.rm = TRUE) / nrow(raw_data())\n    format_percent(rate)\n  })\n  output$avg_duration <- renderText({\n    paste(round(mean(df_completed()$duration_minutes, na.rm = TRUE), 1), \"min\")\n  })\n  output$unique_enumerators <- renderText({ format_number(n_distinct(df_completed()$username)) })\n  \n  output$daily_progress_plot <- renderPlotly({\n    daily_data <- df_completed() %>%\n      group_by(date) %>%\n      summarise(surveys = n(), .groups = \"drop\")\n    \n    plot_ly(daily_data, x = ~date, y = ~surveys, type = 'bar',\n            marker = list(color = custom_colors$primary),\n            hovertemplate = \"Date: %{x}<br>Surveys: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Date\"),\n        yaxis = list(title = \"Number of Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE\n      )\n  })\n  \n  output$gauge_plot <- renderPlotly({\n    target <- 3600\n    current <- nrow(df_completed())\n    percentage <- min(current / target, 1) * 100\n    \n    plot_ly(\n      type = \"indicator\",\n      mode = \"gauge+number+delta\",\n      value = current,\n      delta = list(reference = target),\n      gauge = list(\n        axis = list(range = list(NULL, target)),\n        bar = list(color = custom_colors$primary),\n        steps = list(\n          list(range = c(0, target*0.5), color = \"lightgray\"),\n          list(range = c(target*0.5, target*0.8), color = \"gray\")\n        ),\n        threshold = list(\n          line = list(color = \"red\", width = 4),\n          thickness = 0.75,\n          value = target\n        )\n      )\n    ) %>% \n    layout(\n      title = FALSE, \n      paper_bgcolor = \"transparent\",\n      font = list(color = custom_colors$dark)\n    )\n  })\n  \n  # --- Enumerator Performance ---\n  enumerator_stats <- reactive({\n    df_completed() %>%\n      group_by(username) %>%\n      summarise(\n        total_surveys = n(),\n        avg_duration = round(mean(duration_minutes, na.rm = TRUE), 1),\n        short_surveys = sum(is_short_survey, na.rm = TRUE),\n        night_surveys = sum(is_night_survey, na.rm = TRUE),\n        .groups = \"drop\"\n      ) %>%\n      arrange(desc(total_surveys))\n  })\n  \n  output$enumerator_table <- reactable::renderReactable({\n    reactable(\n      enumerator_stats(),\n      columns = list(\n        username = colDef(name = \"Enumerator\", minWidth = 120),\n        total_surveys = colDef(name = \"Total Surveys\", align = \"center\"),\n        avg_duration = colDef(name = \"Avg Duration (min)\", align = \"center\"),\n        short_surveys = colDef(name = \"Short Surveys (<5min)\", align = \"center\"),\n        night_surveys = colDef(name = \"Night Surveys\", align = \"center\")\n      ),\n      defaultPageSize = 8, \n      searchable = TRUE, \n      highlight = TRUE, \n      bordered = TRUE, \n      striped = TRUE,\n      theme = reactableTheme(\n        headerStyle = list(backgroundColor = \"#f8f9fa\", fontWeight = \"bold\"),\n        cellStyle = list(fontSize = \"0.9em\")\n      )\n    )\n  })\n  \n  output$target_comparison_plot <- renderPlotly({\n    target_per_enum <- 50\n    p_data <- enumerator_stats()\n    \n    plot_ly(p_data, x = ~reorder(username, -total_surveys), y = ~total_surveys, \n            type = 'bar', name = \"Actual\",\n            marker = list(color = custom_colors$primary),\n            hovertemplate = \"Enumerator: %{x}<br>Surveys: %{y}<extra><\/extra>\") %>%\n      add_trace(x = ~reorder(username, -total_surveys), y = target_per_enum, \n                type = 'scatter', mode = 'lines', name = \"Target\",\n                line = list(color = custom_colors$danger, dash = 'dash', width = 3),\n                hovertemplate = \"Target: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Enumerator\", tickangle = -45),\n        yaxis = list(title = \"Total Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        legend = list(orientation = 'h', y = 1.1, x = 0.5, xanchor = 'center'),\n        margin = list(b = 100)\n      )\n  })\n  \n  output$productivity_heatmap <- renderPlotly({\n    heatmap_data <- df_completed() %>%\n      group_by(day_of_week, hour_started) %>%\n      summarise(count = n(), .groups = \"drop\")\n      \n    plot_ly(\n      data = heatmap_data,\n      x = ~hour_started, y = ~day_of_week, z = ~count,\n      type = \"heatmap\", \n      colorscale = list(c(0, \"#f8f9fa\"), c(1, custom_colors$primary)),\n      hovertemplate = \"Day: %{y}<br>Hour: %{x}<br>Surveys: %{z}<extra><\/extra>\"\n    ) %>% \n    layout(\n      title = FALSE,\n      xaxis = list(title = \"Hour of Day\"),\n      yaxis = list(title = \"Day of Week\", categoryorder = \"array\", \n                   categoryarray = c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\")),\n      paper_bgcolor = \"transparent\"\n    )\n  })\n  \n  output$quality_alerts_table <- reactable::renderReactable({\n    quality_data <- enumerator_stats() %>%\n      filter(short_surveys > 0 | night_surveys > 0) %>%\n      select(Enumerator = username, `Short Surveys` = short_surveys, `Night Surveys` = night_surveys)\n      \n    reactable(\n      quality_data,\n      columns = list(\n        `Short Surveys` = colDef(style = function(value) {\n          if (value > 0) list(color = custom_colors$danger, fontWeight = \"bold\") else NULL\n        }),\n        `Night Surveys` = colDef(style = function(value) {\n          if (value > 0) list(color = custom_colors$danger, fontWeight = \"bold\") else NULL\n        })\n      ),\n      defaultPageSize = 5, \n      highlight = TRUE, \n      bordered = TRUE, \n      striped = TRUE,\n      theme = reactableTheme(\n        headerStyle = list(backgroundColor = \"#f8f9fa\", fontWeight = \"bold\")\n      )\n    )\n  })\n  \n  # --- Agricultural Analysis ---\n  species_data <- reactive({\n    df_completed() %>%\n      select(starts_with(\"ps_num_planted_\"), starts_with(\"num_surv_\")) %>%\n      pivot_longer(everything(), names_to = \"key\", values_to = \"value\") %>%\n      mutate(\n        type = ifelse(str_detect(key, \"ps_num_planted\"), \"planted\", \"survived\"),\n        species = str_remove_all(key, \"ps_num_planted_|num_surv_\")\n      ) %>%\n      group_by(species, type) %>%\n      summarise(total = sum(value, na.rm = TRUE), .groups = \"drop\") %>%\n      pivot_wider(names_from = type, values_from = total) %>%\n      mutate(\n        survival_rate = ifelse(planted > 0, (survived / planted) * 100, 0)\n      )\n  })\n  \n  output$survival_rates_plot <- renderPlotly({\n    p_data <- species_data() %>% arrange(desc(survival_rate))\n    \n    plot_ly(p_data, x = ~reorder(species, survival_rate), y = ~survival_rate, \n            type = 'bar', marker = list(color = ~survival_rate, \n            colorscale = list(c(0, \"#ffcdd2\"), c(1, custom_colors$success))),\n            hovertemplate = \"Species: %{x}<br>Survival Rate: %{y:.1f}%<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Species\", tickangle = -45),\n        yaxis = list(title = \"Survival Rate (%)\", range = c(0, 100)),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE,\n        margin = list(b = 100)\n      )\n  })\n  \n  output$species_table <- reactable::renderReactable({\n    display_data <- species_data() %>%\n      select(Species = species, Planted = planted, Survived = survived, `Survival Rate (%)` = survival_rate) %>%\n      arrange(desc(`Survival Rate (%)`))\n      \n    reactable(\n      display_data,\n      columns = list(\n        `Survival Rate (%)` = colDef(\n          name = \"Survival Rate (%)\",\n          style = function(value) {\n            if (is.na(value)) return(NULL)\n            color <- if (value >= 80) {\n              \"#A5D6A7\"\n            } else if (value >= 60) {\n              \"#FFF9C4\"\n            } else {\n              \"#FFCDD2\"\n            }\n            list(background = color)\n          },\n          format = list(digits = 1)\n        )\n      ),\n      defaultPageSize = 7, \n      highlight = TRUE, \n      bordered = TRUE, \n      striped = TRUE,\n      theme = reactableTheme(\n        headerStyle = list(backgroundColor = \"#f8f9fa\", fontWeight = \"bold\")\n      )\n    )\n  })\n  \n  output$geographic_plot <- renderPlotly({\n    geo_data <- df_completed() %>%\n      group_by(woreda) %>%\n      summarise(count = n(), .groups = \"drop\")\n      \n    plot_ly(geo_data, x = ~reorder(woreda, -count), y = ~count, \n            type = 'bar', marker = list(color = custom_colors$secondary),\n            hovertemplate = \"Woreda: %{x}<br>Surveys: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Woreda\", tickangle = -45),\n        yaxis = list(title = \"Number of Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE,\n        margin = list(b = 100)\n      )\n  })\n  \n  # --- Site Analysis ---\n  site_stats <- reactive({\n    df_completed() %>%\n      group_by(site) %>%\n      summarise(\n        total_surveys = n(),\n        avg_duration = round(mean(duration_minutes, na.rm = TRUE), 1),\n        completion_rate = round((n() / nrow(df_completed())) * 100, 1),\n        unique_enumerators = n_distinct(username),\n        avg_hh_size = round(mean(hh_size, na.rm = TRUE), 1),\n        .groups = \"drop\"\n      ) %>%\n      arrange(desc(total_surveys))\n  })\n  \n  output$site_performance_plot <- renderPlotly({\n    p_data <- site_stats()\n    \n    plot_ly(p_data, x = ~reorder(site, -total_surveys), y = ~total_surveys, \n            type = 'bar', marker = list(color = custom_colors$gradient[1]),\n            hovertemplate = \"Site: %{x}<br>Surveys: %{y}<br>Avg Duration: %{customdata} min<extra><\/extra>\",\n            customdata = ~avg_duration) %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Site\", tickangle = -45),\n        yaxis = list(title = \"Number of Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE,\n        margin = list(b = 100)\n      )\n  })\n  \n  output$site_comparison_table <- reactable::renderReactable({\n    reactable(\n      site_stats(),\n      columns = list(\n        site = colDef(name = \"Site\", minWidth = 120),\n        total_surveys = colDef(name = \"Total Surveys\", align = \"center\", minWidth = 100),\n        avg_duration = colDef(name = \"Avg Duration (min)\", align = \"center\"),\n        completion_rate = colDef(name = \"Completion Rate (%)\", align = \"center\"),\n        unique_enumerators = colDef(name = \"Enumerators\", align = \"center\"),\n        avg_hh_size = colDef(name = \"Avg HH Size\", align = \"center\")\n      ),\n      defaultPageSize = 8, \n      searchable = TRUE, \n      highlight = TRUE, \n      bordered = TRUE, \n      striped = TRUE,\n      theme = reactableTheme(\n        headerStyle = list(backgroundColor = \"#f8f9fa\", fontWeight = \"bold\"),\n        cellStyle = list(fontSize = \"0.9em\")\n      )\n    )\n  })\n  \n  output$site_survival_plot <- renderPlotly({\n    # Calculate survival rates by site\n    site_survival <- df_completed() %>%\n      select(site, starts_with(\"ps_num_planted_\"), starts_with(\"num_surv_\")) %>%\n      group_by(site) %>%\n      summarise(\n        total_planted = sum(across(starts_with(\"ps_num_planted_\")), na.rm = TRUE),\n        total_survived = sum(across(starts_with(\"num_surv_\")), na.rm = TRUE),\n        .groups = \"drop\"\n      ) %>%\n      mutate(\n        survival_rate = ifelse(total_planted > 0, (total_survived / total_planted) * 100, 0)\n      ) %>%\n      arrange(desc(survival_rate))\n    \n    plot_ly(site_survival, x = ~reorder(site, survival_rate), y = ~survival_rate, \n            type = 'bar', marker = list(color = ~survival_rate, \n            colorscale = list(c(0, \"#ffcdd2\"), c(1, custom_colors$success))),\n            hovertemplate = \"Site: %{x}<br>Planted: %{customdata[0]}<br>Survived: %{customdata[1]}<br>Rate: %{y:.1f}%<extra><\/extra>\",\n            customdata = ~cbind(total_planted, total_survived)) %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Site\", tickangle = -45),\n        yaxis = list(title = \"Survival Rate (%)\", range = c(0, 100)),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE,\n        margin = list(b = 100)\n      )\n  })\n  \n  output$site_duration_plot <- renderPlotly({\n    duration_data <- site_stats() %>%\n      arrange(desc(avg_duration))\n    \n    plot_ly(duration_data, x = ~reorder(site, avg_duration), y = ~avg_duration, \n            type = 'bar', marker = list(color = custom_colors$warning),\n            hovertemplate = \"Site: %{x}<br>Avg Duration: %{y} min<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Site\", tickangle = -45),\n        yaxis = list(title = \"Average Duration (minutes)\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE,\n        margin = list(b = 100)\n      )\n  })\n  \n  # --- Data Explorer ---\n  filtered_data <- reactive({\n    # Add guards to ensure inputs are ready before filtering\n    req(input$date_range, cancelOutput = TRUE)\n    req(is.Date(input$date_range[1]), is.Date(input$date_range[2]), cancelOutput = TRUE)\n\n    df <- df_completed() %>%\n      select(\n        Date = date, Enumerator = username, \n        Site = site, Woreda = woreda, `Duration (min)` = duration_minutes,\n        `HH Size` = hh_size, `Education` = education_level, Age = age, Sex = sex\n      )\n      \n    # Apply filters\n    df <- df %>% \n      filter(Date >= input$date_range[1] & Date <= input$date_range[2])\n    \n    if (length(input$site_filter) > 0) {\n      df <- df %>% filter(Site %in% input$site_filter)\n    }\n    \n    if (length(input$enum_filter) > 0) {\n      df <- df %>% filter(Enumerator %in% input$enum_filter)\n    }\n    \n    df\n  })\n  \n  output$explorer_table <- reactable::renderReactable({\n    reactable(\n      filtered_data(),\n      searchable = TRUE,\n      striped = TRUE,\n      highlight = TRUE,\n      bordered = TRUE,\n      defaultPageSize = 10,\n      showPageSizeOptions = TRUE,\n      pageSizeOptions = c(10, 25, 50),\n      theme = reactableTheme(\n        headerStyle = list(backgroundColor = \"#f8f9fa\", fontWeight = \"bold\"),\n        cellStyle = list(fontSize = \"0.9em\")\n      )\n    )\n  })\n  \n  # --- Advanced Analytics ---\n  output$funnel_plot <- renderPlotly({\n    funnel_data <- data.frame(\n      stage = c(\"Total Attempts\", \"Completed\", \"Refused\"),\n      value = c(nrow(raw_data()), sum(raw_data()$consent == 1, na.rm = TRUE), sum(raw_data()$consent == 0, na.rm = TRUE))\n    )\n    \n    plot_ly(funnel_data, type = 'funnel',\n            y = ~stage, x = ~value,\n            textposition = \"inside\", textinfo = \"value+percent initial\",\n            marker = list(color = c(custom_colors$primary, custom_colors$success, custom_colors$danger))) %>%\n      layout(\n        title = FALSE, \n        paper_bgcolor = \"transparent\",\n        font = list(color = custom_colors$dark)\n      )\n  })\n  \n  output$duration_plot <- renderPlotly({\n    plot_ly(df_completed(), x = ~duration_minutes, type = 'histogram',\n            marker = list(color = custom_colors$secondary),\n            hovertemplate = \"Duration: %{x} min<br>Count: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Duration (minutes)\"),\n        yaxis = list(title = \"Frequency\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE\n      )\n  })\n  \n  output$weekly_trends_plot <- renderPlotly({\n    weekly_data <- df_completed() %>%\n      group_by(week) %>%\n      summarise(surveys = n(), .groups = \"drop\")\n      \n    plot_ly(weekly_data, x = ~week, y = ~surveys, type = 'scatter', mode = 'lines+markers',\n            line = list(color = custom_colors$primary, width = 3), \n            marker = list(color = custom_colors$primary, size = 8),\n            hovertemplate = \"Week: %{x}<br>Surveys: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Week\"),\n        yaxis = list(title = \"Number of Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        showlegend = FALSE\n      )\n  })\n}\n\n# --- Run Application ---\nshinyApp(ui, server)","type":"text"},{"name":"df.rds","content":"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","type":"binary"}]
